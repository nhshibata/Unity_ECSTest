//==========================================================
メモ
//==========================================================
・ISystemとSystemBase
	ISystemでは参照を伴う処理は書けない
	参照を所持させたいならSystemBase?

・コンポーネントの変数アクセス性
	オーサリングを行うコンポーネントはpublicでも構わない?
	オーサリングを行った後のコンポーネントは未確認

・Systemの使用法
	システムのOnUpdateでjobの発行を行う（公式での仕様?）
	jobに必要な情報の取得はSystemで行う
	実際のふるまいはjobで行う（jobはCollisionなどがある）
	jobの発行方法はSystemBaseとISystemで異なる

・ECSとMonoBehaviourの併用
	設計としてどういった用途を想定しているか掴めていない
	UIなどの処理は従来の仕様で行い、大量のオブジェクトに関してはECSを用いる?

・構造体を用いるポイントを意識する
	ECSの仕様上、参照やstringなどは使用できない

//==========================================================
制作時の注意?
//==========================================================
この方の情報に助けられる
https://note.com/takataok/n/n8a7bdd197f89

・2022年版で制作しているため、ECSについて紹介されている記事とは異なる場合がある（開発途中のため）

・コンパイルを行うことでGameObjectからEntityへ変換される(自作クラスはオーサリング処理が必要)

・Physicsはサンプルをインストールすること（ShapeやBodyはデフォルトでは存在しない）

・描画できない場合はパッケージが足りない





・システムの更新順序
	UpdateBefore(typeof())
	UpdateAfter(typeof())

・System内からの取得
	foreach (var (gund, entity) in SystemAPI.Query<CharacterGunInput>().WithEntityAccess()){}








